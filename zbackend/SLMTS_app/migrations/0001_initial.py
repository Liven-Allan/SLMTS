# Generated by Django 5.2.6 on 2025-10-25 19:42

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opening_time', models.TimeField(default='08:00')),
                ('closing_time', models.TimeField(default='20:00')),
                ('working_days', models.JSONField(default=list)),
                ('business_name', models.CharField(default='CityVille Laundromat', max_length=100)),
                ('business_address', models.TextField(blank=True)),
                ('business_phone', models.CharField(blank=True, max_length=20)),
                ('business_email', models.EmailField(blank=True, max_length=254)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('currency', models.CharField(default='UGX', max_length=10)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=True)),
                ('order_updates', models.BooleanField(default=True)),
                ('payment_reminders', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Business Settings',
                'verbose_name_plural': 'Business Settings',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=20, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=15)),
                ('current_stage', models.CharField(choices=[('order_placed', 'Order Placed'), ('pickup_confirmed', 'Pickup Confirmed'), ('items_received', 'Items Received'), ('washing', 'Washing'), ('drying', 'Drying'), ('folding', 'Folding'), ('quality_check', 'Quality Check'), ('ready_for_delivery', 'Ready for Delivery'), ('out_for_delivery', 'Out for Delivery'), ('delivered', 'Delivered')], default='order_placed', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('items', models.IntegerField(default=0)),
                ('progress', models.IntegerField(default=0)),
                ('pickup_date', models.DateField(blank=True, null=True)),
                ('estimated_delivery', models.DateField(blank=True, null=True)),
                ('delivery_date', models.DateField(blank=True, null=True)),
                ('special_instructions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RevenueSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_orders', models.IntegerField(default=0)),
                ('total_customers', models.IntegerField(default=0)),
                ('service_breakdown', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Revenue Summary',
                'verbose_name_plural': 'Revenue Summaries',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('unit', models.CharField(choices=[('per_kg', 'Per Kilogram'), ('per_item', 'Per Item'), ('flat_rate', 'Flat Rate')], max_length=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=20)),
                ('role', models.CharField(choices=[('customer', 'Customer'), ('staff', 'Staff'), ('driver', 'Driver'), ('admin', 'Admin')], max_length=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('break', 'On Break'), ('inactive', 'Inactive')], default='active', max_length=10)),
                ('address', models.TextField(blank=True)),
                ('orders_count', models.IntegerField(blank=True, default=0, null=True)),
                ('total_spent', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('station', models.CharField(blank=True, max_length=50)),
                ('shift', models.CharField(blank=True, max_length=100)),
                ('tasks_completed', models.IntegerField(blank=True, default=0, null=True)),
                ('efficiency_rating', models.FloatField(blank=True, null=True)),
                ('items_processed', models.IntegerField(blank=True, default=0, null=True)),
                ('vehicle', models.CharField(blank=True, max_length=50)),
                ('route', models.CharField(blank=True, max_length=100)),
                ('deliveries_completed', models.IntegerField(blank=True, default=0, null=True)),
                ('driver_rating', models.FloatField(blank=True, null=True)),
                ('total_distance', models.FloatField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MonthlyAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(choices=[('Jan', 'January'), ('Feb', 'February'), ('Mar', 'March'), ('Apr', 'April'), ('May', 'May'), ('Jun', 'June'), ('Jul', 'July'), ('Aug', 'August'), ('Sep', 'September'), ('Oct', 'October'), ('Nov', 'November'), ('Dec', 'December')], max_length=3)),
                ('year', models.IntegerField()),
                ('revenue', models.DecimalField(decimal_places=2, max_digits=12)),
                ('orders_count', models.IntegerField()),
                ('revenue_growth', models.FloatField(default=0)),
                ('order_growth', models.FloatField(default=0)),
                ('customer_satisfaction', models.FloatField(default=0)),
                ('on_time_delivery', models.FloatField(default=0)),
                ('repeat_customers', models.FloatField(default=0)),
                ('avg_turnaround', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-year', '-month'],
                'unique_together': {('month', 'year')},
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_id', models.CharField(max_length=20, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('paid', 'Paid'), ('pending', 'Pending'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled')], default='pending', max_length=10)),
                ('invoice_date', models.DateField()),
                ('due_date', models.DateField()),
                ('paid_date', models.DateField(blank=True, null=True)),
                ('subtotal', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='invoice', to='SLMTS_app.order')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='SLMTS_app.user')),
            ],
            options={
                'ordering': ['-invoice_date'],
            },
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_id', models.CharField(max_length=20, unique=True)),
                ('delivery_type', models.CharField(choices=[('pickup', 'Pickup'), ('delivery', 'Delivery')], max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in-transit', 'In Transit'), ('completed', 'Completed'), ('failed', 'Failed'), ('rescheduled', 'Rescheduled')], default='pending', max_length=15)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('address', models.TextField()),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('scheduled_time', models.CharField(max_length=50)),
                ('estimated_duration', models.CharField(max_length=20)),
                ('distance', models.CharField(max_length=20)),
                ('special_instructions', models.TextField(blank=True)),
                ('delivery_notes', models.TextField(blank=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('signature_image', models.ImageField(blank=True, null=True, upload_to='signatures/')),
                ('photo_confirmation', models.ImageField(blank=True, null=True, upload_to='delivery_photos/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='SLMTS_app.order')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driver_deliveries', to='SLMTS_app.user')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderTimeline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stage', models.CharField(max_length=50)),
                ('completed', models.BooleanField(default=False)),
                ('is_current', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeline', to='SLMTS_app.order')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=8)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('special_instructions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='SLMTS_app.order')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='SLMTS_app.service')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(max_length=20, unique=True)),
                ('task_type', models.CharField(choices=[('washing', 'Washing'), ('drying', 'Drying'), ('folding', 'Folding'), ('pressing', 'Pressing'), ('stain_treatment', 'Stain Treatment'), ('quality_check', 'Quality Check'), ('packaging', 'Packaging')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in-progress', 'In Progress'), ('completed', 'Completed')], default='pending', max_length=15)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('items_count', models.IntegerField()),
                ('estimated_duration', models.CharField(max_length=20)),
                ('current_stage', models.IntegerField(default=0)),
                ('total_stages', models.IntegerField(default=4)),
                ('special_instructions', models.TextField(blank=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='SLMTS_app.order')),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_tasks', to='SLMTS_app.user')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='service',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_services', to='SLMTS_app.user'),
        ),
        migrations.CreateModel(
            name='RFIDTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_id', models.CharField(max_length=20, unique=True)),
                ('item_description', models.CharField(blank=True, max_length=200)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('scanned', 'Scanned'), ('verified', 'Verified'), ('completed', 'Completed')], default='pending', max_length=15)),
                ('scanned_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rfid_tags', to='SLMTS_app.order')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='SLMTS_app.task')),
                ('scanned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scanned_tags', to='SLMTS_app.user')),
            ],
            options={
                'ordering': ['tag_id'],
            },
        ),
        migrations.AddField(
            model_name='order',
            name='assigned_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_orders', to='SLMTS_app.user'),
        ),
        migrations.AddField(
            model_name='order',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_orders', to='SLMTS_app.user'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('info', 'Info'), ('success', 'Success'), ('warning', 'Warning'), ('error', 'Error')], default='info', max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('delivery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SLMTS_app.delivery')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SLMTS_app.order')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='SLMTS_app.task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='SLMTS_app.user')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FinancialRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_date', models.DateField()),
                ('record_type', models.CharField(choices=[('revenue', 'Revenue'), ('expense', 'Expense'), ('payment', 'Payment'), ('refund', 'Refund')], max_length=10)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('description', models.TextField(blank=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='financial_records', to='SLMTS_app.invoice')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='financial_records', to='SLMTS_app.order')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='financial_records', to='SLMTS_app.service')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='financial_records', to='SLMTS_app.user')),
            ],
            options={
                'ordering': ['-record_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomerPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detergent', models.CharField(choices=[('eco-friendly', 'Eco-friendly'), ('regular', 'Regular'), ('sensitive', 'Sensitive Skin'), ('fragrance-free', 'Fragrance-free')], default='regular', max_length=20)),
                ('fabric_softener', models.BooleanField(default=True)),
                ('starch', models.BooleanField(default=False)),
                ('special_instructions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to='SLMTS_app.user')),
            ],
            options={
                'verbose_name': 'Customer Preferences',
                'verbose_name_plural': 'Customer Preferences',
            },
        ),
    ]
